name: Artifact Release
on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      namespace:
        required: false
        type: string
        default: "vector"
      release_name:
        required: false
        type: string
        default: "vector"
      deployment_name:
        required: false
        type: string
        default: "vector-workspace"
    secrets:
      DATABASE_DSN:
        required: false
        description: "Database connection string override"
      AWS_ACCESS_KEY:
        required: false
        description: "AWS Access Key override"
      AWS_SECRET_KEY:
        required: false
        description: "AWS Secret Key override"
      AWS_REGION:
        required: false
        description: "AWS Region override"
      REDIS_URL:
        required: false
        description: "Redis connection string override"
      PROXIES:
        required: false
        description: "Comma-separated list of proxies to use"

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  run:
    name: Build Leads Scraper Executable
    runs-on: ubuntu-latest
    timeout-minutes: 7
    strategy:
      fail-fast: true
      matrix:
        go: ['1.23.4']

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      # - name: Lint
      #   run: make lint

      # - name: Go Vet
      #   run: go vet ./...

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Build
        run: go build -o /dev/null ./...
      - name: Test
        run: go test -timeout 5m ./...
  build-leads-scraper:
    name: Build leads scraper images for ${{ inputs.environment }}
    uses: ./.github/workflows/reusable-deploy-docker-artifacts.yml
    with:
      dockerfile: Dockerfile
      image-name: feelguuds/leads-scraper-service
      context: .
      platform: linux/amd64
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  deploy-leads-scraper:
    if: github.event_name != 'pull_request'
    needs: build-leads-scraper
    name: Deploy Lead Scraper Service To DigitalOcean Kubernetes cluster ${{ inputs.environment }}
    uses: ./.github/workflows/reusable-k8s-deployment.yml
    with:
      environment: ${{ github.ref == 'refs/heads/staging' && 'staging' || 'production' }}
      namespace: vector
      release_name: leads-scraper-service
      app_root: .
      chart_name: leads-scraper-service
      helm_timeout: "2m" # optional
      kubeconfig_expiry: "600" # optional
    secrets:
      DATABASE_DSN: ${{ github.ref == 'refs/heads/staging' && secrets.DATABASE_DSN_STAGING || secrets.DATABASE_DSN }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      PROXIES: ${{ secrets.PROXIES }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      HETZNER_CONTROL_PLANE_IP: ${{ secrets.CONTROL_PLANE_IP }}