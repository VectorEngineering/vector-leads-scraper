# Default values for leads-scraper-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: feelguuds/leads-scraper-service
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {} # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 1000m
    memory: 512Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  http:
    path: /health
    port: http
    initialDelaySeconds: 5
    periodSeconds: 10
  grpc:
    tcpSocket:
      port: grpc
    initialDelaySeconds: 10
    periodSeconds: 15

readinessProbe:
  http:
    path: /health
    port: http
    initialDelaySeconds: 5
    periodSeconds: 10
  grpc:
    tcpSocket:
      port: grpc
    initialDelaySeconds: 5
    periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 95
  targetMemoryUtilizationPercentage: 95
  # Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Test configuration
tests:
  enabled: false  # Set to true to enable helm tests
  healthCheck:
    enabled: true
    path: "/health"
  configCheck:
    enabled: true

# Application specific configuration
config:
  # gRPC Configuration
  grpc:
    # -- Enable gRPC server mode
    enabled: true
    # -- gRPC server port
    port: 50051
    # -- Service name for gRPC server
    serviceName: "vector-leads-scraper"
    # -- Environment (development, staging, production)
    environment: "production"
    # -- gRPC deadline
    deadline: "5s"
    # -- gRPC retries
    retries: 3
    # -- gRPC retry delay
    retryDelay: "1s"

  # Redis Configuration
  redis:
    # -- Enable Redis task handler
    enabled: true
    # -- Redis host
    host: "gmaps-scraper-leads-scraper-service-redis-master.default.svc.cluster.local"
    # -- Redis port
    port: 6379
    # -- Redis password
    password: "redispass"
    # -- Redis DSN (connection string)
    dsn: "redis://:redispass@gmaps-scraper-leads-scraper-service-redis-master.default.svc.cluster.local:6379/0"
    # -- Redis workers
    workers: 10
    # -- Retry interval for failed tasks
    retryInterval: "5s"
    # -- Maximum number of retries
    maxRetries: 3
    # -- Number of days to retain task history
    retentionDays: 7
  # Database Configuration (Required)
  database:
    # Database connection string (Required)
    # Format: postgres://username:password@host:port/dbname
    # This will be overridden when postgresql.enabled is true
    dsn: ""

  # AWS Configuration (Optional)
  aws:
    accessKey: ""
    secretKey: ""
    region: ""
    lambda:
      enabled: false
      chunkSize: 100
      invoker: false
      functionName: ""
    s3:
      bucket: "leads-scraper-service"

  # Scraper Configuration
  scraper:
    # Web server mode is always enabled
    webServer: true
    # Core settings
    concurrency: 11
    depth: 5
    language: "en"
    searchRadius: 10000
    zoomLevel: 15
    # Optional features
    emailExtraction: false
    fastMode: true
    exitOnInactivity: ""
    proxies: ""

  newrelic:
    enabled: true
    key: "2aa111a8b39e0ebe981c11a11cc8792cFFFFNRAL"

  logging:
    level: "info"

# Worker Configuration
worker:
  enabled: true
  replicas: 3
  concurrency: 10
  depth: 5
  fastMode: true
  emailExtraction: false
  exitOnInactivity: "1h"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi

# PostgreSQL subchart configuration
postgresql:
  enabled: false  # Enable PostgreSQL by default for local development
  auth:
    username: postgres
    password: postgres
    database: leads_scraper
    # PostgreSQL password will be stored in a secret
    existingSecret: ""
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    service:
      ports:
        postgresql: 5432
    # PostgreSQL configuration
    extraEnvVars:
      - name: POSTGRESQL_MAX_CONNECTIONS
        value: "100"
      - name: POSTGRESQL_SHARED_BUFFERS
        value: "128MB"
