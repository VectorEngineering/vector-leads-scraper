{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "leads-scraper-service.fullname" . }}-worker
  labels:
    {{- include "leads-scraper-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicas | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "leads-scraper-service.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "leads-scraper-service.labels" . | nindent 8 }}
        app.kubernetes.io/component: worker
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "leads-scraper-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            # Worker mode configuration
            - "--worker"
            - "-c={{ .Values.worker.concurrency }}"
            - "-depth={{ .Values.worker.depth }}"
            - "-lang={{ .Values.config.scraper.language }}"
            - "-dsn={{ include "leads-scraper-service.postgresql.dsn" . }}"
            # Database configuration
            - "--db-max-idle-connections={{ .Values.config.database.maxIdleConnections }}"
            - "--db-max-open-connections={{ .Values.config.database.maxOpenConnections }}"
            - "--db-max-connection-lifetime={{ .Values.config.database.maxConnectionLifetime }}"
            - "--db-max-connection-retry-timeout={{ .Values.config.database.maxConnectionRetryTimeout }}"
            - "--db-retry-sleep={{ .Values.config.database.retrySleep }}"
            - "--db-query-timeout={{ .Values.config.database.queryTimeout }}"
            - "--db-max-connection-retries={{ .Values.config.database.maxConnectionRetries }}"
            # Redis configuration
            {{- if .Values.config.redis.enabled }}
            - "--redis-enabled=true"
            - "--redis-host={{ .Values.config.redis.host }}"
            - "--redis-port={{ .Values.config.redis.port }}"
            - "--redis-password={{ .Values.config.redis.password }}"
            - "--redis-workers={{ .Values.config.redis.workers }}"
            - "--redis-retry-interval={{ .Values.config.redis.retryInterval }}"
            - "--redis-max-retries={{ .Values.config.redis.maxRetries }}"
            - "--redis-retention-days={{ .Values.config.redis.retentionDays }}"
            {{- end }}
            # Scraper settings
            - "-fast-mode={{ .Values.worker.fastMode }}"
            - "-radius={{ .Values.config.scraper.searchRadius }}"
            - "-zoom={{ .Values.config.scraper.zoomLevel }}"
            {{- if .Values.worker.emailExtraction }}
            - "-email"
            {{- end }}
            {{- if .Values.worker.exitOnInactivity }}
            - "-exit-on-inactivity={{ .Values.worker.exitOnInactivity }}"
            {{- end }}
            {{- if .Values.worker.proxies }}
            - "-proxies={{ .Values.worker.proxies }}"
            {{- end }}
            # Monitoring and logging
            {{- if .Values.config.newrelic.enabled }}
            - "--newrelic-key={{ .Values.config.newrelic.key }}"
            {{- end }}
            - "--log-level={{ .Values.config.logging.level }}"
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 